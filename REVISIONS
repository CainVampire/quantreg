Recent Revision History

3.04 September 19 2001  

1.  ci set to F if p==1 to prevent seg fault identified by Marcel Wolbers.

3.05 December 21 2001  

1. "iid" case in summary.rq fixed to update call to l1fit 
2. documentation and consistency checking updates to conform with R1.4.0


3.06 March 5 2002  

1.  Added LEGAL directory to clarify the licensing arrangement with Splus/
Insightful Corp.

3.07 March  2002

1.  Expanded table.rq to use method="fn", and adapted plot.table.rq to
use the polygon strategy of recent papers for the confidence band.

2.  Adapted the old version of latex.table and latex.table.rq to use
output of table.rq to make latex tables from the output array.  This
eventually could be updated to fit better into the expected R version
of Frank Harrell's Hmisc.  (The function latex.table is a slightly
hacked version of Frank's old latex.table function for Splus.)

3.  Added argument transpose to allow the tables to be flipped so that
row dimension is quantiles rather than coefs.

4.  Added error checking for tau+/-h outside (0,1) in summary.rq 

5.  Revised rq.fit.fn and rqfn.[rf] to simplify the calling sequence
basically to move the initialization into the R function.  (This is
in preparation for a new version that will incorporate inequality constraints.)

6.  Also relaxed upper bound constraints so that they could be specified
in rq.fit.fn rather than assumed to take the value one.

7.  Added a (long awaited) anova function for rq to do F test like inference
for both nested models for a single quantile and tests of equality of slope
coefficients across identical models estimated at several quantiles.
These new functions are (for the moment) in the R directory as anova.R.

3.08 May 22 2002

1.  Fixed a bug in anova.rqlist ndf = (p-1)*(m-1) not p*(m-1).

3.09 May 27 2002

1.  Added new functions rq.fit.fnb and rq.fit.fnc and associated fortran
and ratfor code.  The former is a slightly revised version of rq.fit.fn
the interior point algorithm for computing rq;  it should have exactly
the same functionality as the prior version, but _might_ work somewhat
more efficiently on some problems.  The new function rq.fit.fnc
is an interior point method for fitting rq problems subject to inequality
constraints on the coefficients.  The algorithm is a modified version
of the interior point method used for unconstrained problems and should
be described in detail (eventually) in a paper with Pin Ng.

3.10 July 4 2002

1.  Revised slightly the rq.fit.fnb function and the related ratfor/fortran
code to enable it to start at a (dual) point  that doesn't satisfy the
equality constraints.  And attempted to fix the many places that used T/F
rather than TRUE/FALSE in preparation for R-1.6.0 (at the suggestion of
Kurt Hornik.)

3.11 July 10 2002

1.  Fixed a few more T/F's at Kurt's behest, and changed some _ to <- in
the examples.  And added PACKAGE = "quantreg") to the .Fortran calls.

3.12 Nov 1, 2002.  

1.  fixed two generic inconsistencies Kurt found in table.R.

3.13 December 18 2002

1.  Fixed bug in summary.rq when se=iid found by Xuming.
 
3.14 December 30 2002

1.  Added a graphics example to rq.Rd using the Engel data and added the data set 

3.15 January 22 2003 

1. Fixed a typo in the akj.Rd file and added a reference.

3.16 February 6 2003 

1.  Fixed a generic method mismatch in the latex family prompted by Kurt's notice
that R CMD check quantreg produced a warning in R 1.7.0.  Now seems to check cleanly
in the devel version of 1.7.0 installed today.

3.17 February 17 2003 

1.  Removed the last of the _ assignments in the example files.

3.18 March 4 2003 

1.  Fixed a documentation bug in rq.fit.br the entry for alpha was changed from:

 alpha: the nominal coverage probability for the confidence intervals            

to

 alpha: the nominal noncoverage probability for the confidence intervals            

3.19 March 25 2003 

1.  Added src/Makevars file in accordance with Brian's email request, see R email folder.

3.20 April 27 2003 

1.  Found a bug in the fn family of fortran/ratfor functions.  When the initial
least squares start produced a residual which was a hard zero, then the
initial value of Q had a NaN value and this caused the function to return
with all NaN coef values.  This was altered to make z and w = eps when
this happens.

2.  When interp=FALSE in rq.fit.br the tcrit flag was broken.

3.  added names to coef return when CI= FALSE in rq.fit.br


3.30  August 13 2003

1.  added several bootstrapping methods to summary.rq including the MCMB
approach of He and Hu based on code by Xuming He and Maria Kocherginsky.

2.  added n choose m subsampling for the xy pair version of the bootstrap.

3.31  August 25 2003

1.  fixed a bug in anova.rqlist that messed up the checking for an intercept
found by Juan de la Garza.

3.33  January 09  2004

1.  Fixed a bug in ranks() found by Brian Cade involving the tau score function.

3.35  March 09  2004

1.  Changed the default behavior of rq to produce only the point estimates and
residuals when 0 < tau < 1, instead of automatically producing the rank inversion
confidence interval table.  The latter is now available from summary.rq by 
specifying se="rank".  (This is actually the default option in summary.rq when
the sample size is less than 1001.

2.  Altered anova.rq slightly to accomodate its use for two sample rank tests --
this task was simplified somewhat by (1.).

3.36 June 9, 2004

1.  Scoping problem in summary.rq made data invisible when formula
variables were specified using data=blot in rq().  This entailed a
somewhat extensive updating of rq and summary.rq in accordance with
the "Notes on model-fitting" white paper on the R developer page.
Thanks for that! to the anon author.  Now rather than passing x,y
a model object is passed indicating how the model should be 
reconstructed.  As a byproduct, the lowest level fitting routines
no longer return x,y,  thus saving some memory.

2.  added a error check to boot.rq to prevent users from calling with
tau outside (0,1).  Calls with   tau = 1 produced a rather nasty memory
overwrite as experienced by Alexis Diamond, debugging required some interesting 
adventures with gc().

3.  Major revision of the code to do inference on the rq process based
on the Khmaladze approach.  See khmaladze.test for further details.
In the process discovered a minor bug the resulted in problem with the
Joint test statistic.  (Two missing commas!)
